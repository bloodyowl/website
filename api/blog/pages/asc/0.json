{"hasPreviousPage":false,"hasNextPage":false,"totalCount":14,"items":[{"slug":"2021-03-30-google-rather-break-your-ads-than-be-privacy-friendly","filename":"2021-03-30-google-rather-break-your-ads-than-be-privacy-friendly","title":"Google rather break your ads than be privacy-friendly","date":"Tue, 30 Mar 2021 00:00:00 GMT","draft":false,"meta":{"title":"Google rather break your ads than be privacy-friendly","date":"2021-03-30T00:00:00.000Z"},"summary":"<h2>A little bit on EU regulations</h2>\n<p>In 2016, the <strong>General Data Protection Regulation</strong> (or GDPR for short) was voted in the EU. In short, it's a set of regulations for data collection and processing, and one of the most impactful changes it brings is</p>\n"},{"slug":"2021-03-11-overthinking-in-react","filename":"2021-03-11-overthinking-in-react","title":"Overthinking in React","date":"Thu, 11 Mar 2021 00:00:00 GMT","draft":false,"meta":{"title":"Overthinking in React","date":"2021-03-11T00:00:00.000Z"},"summary":"<p>Now and then, I stumble opon online pieces about how to make React applications the right wayâ„¢, whether on an optimization angle or a scalability one.</p>\n<p>Some will tell you that in order to be performant, you'll need to make <code>useMemo</code> and <code>useCallback</code></p>\n"},{"slug":"2021-02-13-a-guide-for-simple-presentations","filename":"2021-02-13-a-guide-for-simple-presentations","title":"A guide for simple presentations","date":"Sat, 13 Feb 2021 00:00:00 GMT","draft":false,"meta":{"title":"A guide for simple presentations","date":"2021-02-13T00:00:00.000Z"},"summary":"<p><img src=\"/public/assets/images/keynote.webp\" alt=\"Keynote screenshot\" width=\"2904\" height=\"1456\" onload=\"this.style.opacity=1\" loading=\"lazy\"/></p>\n<h2>1. Know your audience</h2>\n<p>It might seem obvious, but that's the <strong>#1 problem</strong> with most presentations,</p>\n"},{"slug":"2021-01-22-we-ve-got-an-advertising-problem","filename":"2021-01-22-we-ve-got-an-advertising-problem","title":"We've got an advertising problem","date":"Fri, 22 Jan 2021 00:00:00 GMT","draft":false,"meta":{"title":"We've got an advertising problem","date":"2021-01-22T00:00:00.000Z"},"summary":"<p><strong>By successfully transforming private user data into a profit, the richest companies have taken advertising a step too far, endangering both the private and the public life.</strong></p>\n<p>Nowadays, in order to generate revenue, most websites sell some of their</p>\n"},{"slug":"2021-01-14-industry-dialects","filename":"2021-01-14-industry-dialects","title":"Industry dialects","date":"Thu, 14 Jan 2021 00:00:00 GMT","draft":false,"meta":{"title":"Industry dialects","date":"2021-01-14T00:00:00.000Z"},"summary":"<p>From the wording of an action button to the general tone we use, the <strong>way we communicate</strong> to our users textually is <strong>part of design</strong>.</p>\n<p>You're more likely to find a <em>Publish</em> button than a _Set the publish flag to true and push the item into that</p>\n"},{"slug":"2021-01-09-write-dumb-code","filename":"2021-01-09-write-dumb-code","title":"Write dumb code","date":"Sat, 09 Jan 2021 00:00:00 GMT","draft":false,"meta":{"title":"Write dumb code","date":"2021-01-09T00:00:00.000Z"},"summary":"<p>Most of us, in the early years of our carreers focus on making code <strong>that we can be proud of</strong>. Clean code. Elegant code. Smart code.</p>\n<p>I used to spend hours trying to make my code do smart stuff, avoiding repetition at all cost with factorisation,</p>\n"},{"slug":"2020-11-26-rescript-pages","filename":"2020-11-26-rescript-pages","title":"ReScript Pages","date":"Thu, 26 Nov 2020 00:00:00 GMT","draft":false,"meta":{"title":"ReScript Pages","date":"2020-11-26T00:00:00.000Z"},"summary":"<p>Last year, I wrote about how this <a href=\"/blog/2019-01-22-static-single-page-application\">static single application</a> was built. From that time, I had to build several static websites, and at some point had to make them simpler to use.</p>\n<p>The main websites I'</p>\n"},{"slug":"2019-04-19-an-alternative-migration-path-for-reason-react","filename":"2019-04-19-an-alternative-migration-path-for-reason-react","title":"An alternative migration path for ReasonReact","date":"Fri, 19 Apr 2019 00:00:00 GMT","draft":false,"meta":{"date":"2019-04-19T00:00:00.000Z","title":"An alternative migration path for ReasonReact"},"summary":"<p><a href=\"https://github.com/bloodyowl/upgrade-reason-react-esy\">tl;dr</a></p>\n<h2>Why the new API?</h2>\n<p>ReasonReact 0.7.0 came out recently, with a really nice set of features:</p>\n<ul>\n<li>A closer model from the official ReactJS API</li>\n<li>Hooks</li>\n<li>Zero-cost bindings</li>\n</ul>\n<p>From some time</p>\n"},{"slug":"2019-02-10-what-is-the-option-type-and-what-does-it-solve","filename":"2019-02-10-what-is-the-option-type-and-what-does-it-solve","title":"What is the option type, and what does it solve?","date":"Sun, 10 Feb 2019 00:00:00 GMT","draft":false,"meta":{"date":"2019-02-10T00:00:00.000Z","title":"What is the option type, and what does it solve?"},"summary":"<p>Most popular languages right now have a particular value called <code>null</code>, which represent the deliberate absence of a value (JS also has <code>undefined</code>, which pretty much works the same but has a slightly different purpose).</p>\n<p>With that in mind, most stat</p>\n"},{"slug":"2019-02-09-how-reason-react-router-represents-a-url","filename":"2019-02-09-how-reason-react-router-represents-a-url","title":"How ReasonReact.Router represents a URL","date":"Sat, 09 Feb 2019 00:00:00 GMT","draft":false,"meta":{"date":"2019-02-09T00:00:00.000Z","title":"How ReasonReact.Router represents a URL"},"summary":"<p>ReasonReact embeds a small router out of the box.</p>\n<p>Its API surface is smaller than most solutions you can find out there, but it leverage some languages data-structures in an interesting way, particularly in how it represents URL paths.</p>\n<p>Here's how i</p>\n"},{"slug":"2019-01-24-orchestrating-requests-at-component-level","filename":"2019-01-24-orchestrating-requests-at-component-level","title":"Orchestrating requests at component level","date":"Thu, 24 Jan 2019 00:00:00 GMT","draft":false,"meta":{"date":"2019-01-24T00:00:00.000Z","title":"Orchestrating requests at component level"},"summary":"<p><a href=\"/blog/2019-01-20-requests-with-reasonml/\">In a previous article</a>, we saw how we can model request statuses in our ReasonReact component state, so that we prevent weird or impossible states.</p>\n<p>Now, let's see how we can orchestrate them <strong>within</strong> our</p>\n"},{"slug":"2019-01-23-generating-reason-react-components-with-functors","filename":"2019-01-23-generating-reason-react-components-with-functors","title":"Generating ReasonReact components with functors","date":"Wed, 23 Jan 2019 00:00:00 GMT","draft":false,"meta":{"date":"2019-01-23T00:00:00.000Z","title":"Generating ReasonReact components with functors"},"summary":"<p>In JavaScript, React components can either be function or classes. This makes it easy to create functions that return components (factories if you will).</p>\n<p>With ReasonReact though, if you want to use them with JSX, components need to be modules contai</p>\n"},{"slug":"2019-01-22-static-single-page-application","filename":"2019-01-22-static-single-page-application","title":"Static single page application","date":"Tue, 22 Jan 2019 00:00:00 GMT","draft":false,"meta":{"date":"2019-01-22T00:00:00.000Z","title":"Static single page application"},"summary":"<p>As you can see from the URL, this little website is hosted on GitHub pages, meaning it can only be static.</p>\n<p>The approach I chose here was to build it like a single page application that I'd render at build time.</p>\n<p>This approach gives the best of bot</p>\n"},{"slug":"2019-01-20-requests-with-reasonml","filename":"2019-01-20-requests-with-reasonml","title":"Requests with ReasonML","date":"Sun, 20 Jan 2019 00:00:00 GMT","draft":false,"meta":{"date":"2019-01-20T00:00:00.000Z","title":"Requests with ReasonML"},"summary":"<blockquote>\n<p>This is how I choose to represent requests in my ReasonReact apps, there might be different ways that work well for you, but if this is something that you struggle with, that could be a good introduction to see how sum types can help you.</p>\n</blockquote>\n<p>Given th</p>\n"}]}